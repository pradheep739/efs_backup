name: Crawler-Advisor

on:
  workflow_dispatch:
    inputs:
      crawler:
        type: choice
        description: choose crawler
        options:
          - FA-CA
          - FA-AU
          - FA-IT
          - USAT
          - CNN
          - Advisor
      Docekrfile:
        type: choice
        description: choose dockerfile respective to site
        options:
         - Dockerfile-FA-CA
         - Dockerfile-FA-AU
         - Dockerfile-FA-IT
         - Dockerfile-USAT
         - Dockerfile-Advisor

permissions:
  id-token: write
  contents: read

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
        
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-skip-session-tagging: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'
       
      - name: Generate Image Tag
        id: tag
        run: |
            run_id=${{ github.run_id }}
            run_num=${{ github.run_number }}
            echo "IMAGE_TAG=${run_id}-${run_num}" >> $GITHUB_OUTPUT

      - shell: bash
        env:
          QA_ENV: ${{ secrets.ADVISOR_ENV }}
        run: |
          echo "${{ secrets.ADVISOR_ENV }}" | base64 -d > .env
          
      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ADVISOR_ECR_REPO }}
          IMAGE_TAG: ${{ steps.tag.outputs.IMAGE_TAG }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
